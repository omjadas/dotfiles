#!/usr/bin/env bash

rust () {
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    rustup default stable
    rustup component add rls rustfmt
}

cd "$HOME"
yadm submodule update --recursive --init

SYSTEM_TYPE=$(uname -s)

# Linux specific config
if [[ "$SYSTEM_TYPE" = "Linux" ]]; then
    if command -v pacman >/dev/null 2>&1; then
        echo "Updating packages"
        sudo pacman -Syu

        echo "Installing packages"
        sudo pacman -S atool autopep8 base-devel bat clang cloc diff-so-fancy \
            dlang-dmd exa fasd fzf git go httpie hub jdk-openjdk jq kotlin \
            llvm lsb-release neofetch neovim nodejs npm openssh plantuml \
            python python-pip python-pipenv python-rope python-pylint \
            pygmentize pyenv ripgrep ruby ruby-irb rustup tmux unzip vifm vim \
            zip zsh zsh-completions
        rustup default stable
        rustup component add rls rustfmt

        if ! command -v yay >/dev/null 2>&1; then
            echo "Installing yay"
            git clone https://aur.archlinux.org/yay.git
            cd yay
            makepkg -si
            cd ..
            rm -rf yay
        fi

        yay -S direnv github-cli go-jira kompose-bin ngrok tmuxinator yadm
    elif command -v apt >/dev/null 2>&1; then
        echo "Updating packages"
        sudo apt udpate && sudo apt dist-upgrade

        echo "Installing packages"
        sudo apt install atool bat clang cloc default-jdk direnv fasd git \
            httpie jq llvm lsb-release neofetch neovim nodejs npm plantuml \
            pylint3 python-autopep8 python3 python3-pygments python3-rope \
            ripgrep ruby tmux unzip vifm vim zip zsh
        rust
    elif command -v dnf >/dev/null 2>&1; then
        echo "Updating packages"
        sudo dnf upgrade
        rust
    fi
    if [[ "$(uname -r)" =~ (m|M)icrosoft ]]; then
        ln -s /mnt/c/Users/Omja\ Das/.ssh "$HOME"
        sudo npm install -g wsl-open
    fi
    sudo npm install -g @google/clasp commitizen cz-conventional-changelog \
        eslint nodemon tsnode typescript
# macOS specific config
elif [[ "$SYSTEM_TYPE" = "Darwin" ]]; then
    if ! command -v brew >/dev/null 2>&1; then
        echo "Installing homebrew"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    fi

    if [[ -f "$HOME/.Brewfile" ]]; then
        echo "Updating homebrew bundle"
        brew bundle --global
    fi
fi

vim -c "PlugClean | PlugUpdate | q | q"
