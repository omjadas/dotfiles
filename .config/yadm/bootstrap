#!/usr/bin/env bash

rust-components () {
    rustup component add clippy rls rust-analysis rust-src rustfmt
    cargo install cargo-edit
}

rust () {
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    rustup default stable
    rust-components
}

cd "$HOME"
yadm submodule update --recursive --init

SYSTEM_TYPE=$(uname -s)

# Linux specific config
if [[ "$SYSTEM_TYPE" = "Linux" ]]; then
    if command -v pacman >/dev/null 2>&1; then
        echo "Updating packages"
        sudo pacman -Syu

        echo "Installing packages"
        sudo pacman -S ansible atool autopep8 aws-cli base-devel bat bmon \
            cabal-install clang cloc dlang-dmd dotnet-sdk eksctl exa fd fzf \
            ghc ghc-static git github-cli git-lfs go hexyl httpie hyperfine \
            iftop jdk-openjdk jq kotlin ldns llvm lsb-release lshw lsof \
            man-db maven minikube moreutils neofetch nmap nodejs npm openmpi \
            openssh pandoc plantuml python python-pip python-pipenv \
            python-rope python-pylint pygmentize pyenv rclone ripgrep ruby \
            ruby-irb rustup sd shfmt stack terraform tmux units unzip vifm \
            vim watchman wget xdg-utils zip zsh zsh-completions
        rustup default stable
        rust-components

        if ! command -v yay >/dev/null 2>&1; then
            echo "Installing yay"
            git clone https://aur.archlinux.org/yay.git
            cd yay
            makepkg -si
            cd ..
            rm -rf yay
        fi

        yay -S azure-cli bat-extras-git direnv dust-bin git-delta-bin \
            go-jira-bin google-cloud-sdk gotop-bin hadolint-bin k6-bin \
            kompose-bin mosh-git neovim-nightly ngrok procs-bin tmuxinator \
            up-bin yadm yay zoxide-bin
    elif command -v apt >/dev/null 2>&1; then
        echo "Updating packages"
        sudo apt update && sudo apt dist-upgrade

        echo "Installing packages"
        sudo apt install atool bat build-essential clang cloc default-jdk \
            direnv fasd git haskell-platform httpie jq llvm lsb-release \
            moreutils mosh neofetch neovim nodejs npm pandoc plantuml pylint3 \
            python3-autopep8 python3 python3-pygments python3-rope ripgrep \
            ruby tmux unzip vifm vim zip zsh
        rust
    elif command -v dnf >/dev/null 2>&1; then
        echo "Updating packages"
        sudo dnf upgrade
        rust
    fi

    # WSL specific config
    if [[ "$(uname -r)" =~ (m|M)icrosoft ]]; then
        ln -s /mnt/c/Users/Omja\ Das/.ssh "$HOME"
        sudo npm install -g wsl-open
    fi

    sudo npm install -g @google/clasp commitizen cz-conventional-changelog \
        eslint nodemon ts-node typescript
    pip install --user j2cli togglCli
# macOS specific config
elif [[ "$SYSTEM_TYPE" = "Darwin" ]]; then
    if ! command -v brew >/dev/null 2>&1; then
        echo "Installing homebrew"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    fi

    if [[ -f "$HOME/.Brewfile" ]]; then
        echo "Updating homebrew bundle"
        brew bundle --global
    fi
fi

vim -c "PlugClean | PlugUpdate | qa"
nvim -c "PlugClean | PlugUpdate | qa"
